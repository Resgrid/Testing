import { test, expect } from '@playwright/test';

test('calls add archived call', async ({ page }) => {
  await page.goto('https://qaweb.resgrid.dev/Account/LogOn');
  await page.getByPlaceholder('Username').click();
  await page.getByPlaceholder('Username').fill(process.env.PW_LOGIN_USERNAME);
  await page.getByPlaceholder('Password').click();
  await page.getByPlaceholder('Password').fill(process.env.PW_LOGIN_PASSWORD);
  await page.getByRole('button', { name: 'Log On' }).click();
  await page.getByRole('link', { name: ' Calls' }).click();
  await expect(page.locator('#unitsStatusesList')).toContainText('Engine 1');
  await page.getByRole('link', { name: 'Archived Calls' }).click();
  await expect(page.locator('#addOldCall')).toContainText('Add Archived Call');
  await page.getByRole('link', { name: 'Add Archived Call' }).click();
  await expect(page.locator('ol')).toContainText('Add Archived Call');
  await page.getByPlaceholder('Name of the Call').click();
  await page.getByPlaceholder('Name of the Call').fill('Test Archive Call');
  await page.locator('#CallPriority').selectOption('1');
  await page.locator('#Call_Type').selectOption('MEDICAL');
  await page.locator('#Call_Type').selectOption('TRAFFIC ACCIDENT');
  await page.getByPlaceholder('Name of the Person Reporting').click();
  await page.getByPlaceholder('Name of the Person Reporting').fill('test1');
  await page.getByPlaceholder('Phone or Email address of the').click();
  await page.getByPlaceholder('Phone or Email address of the').fill('test2');
  await page.getByPlaceholder('CAD Id or Inbound Call System').click();
  await page.getByPlaceholder('CAD Id or Inbound Call System').fill('test3');
  await page.getByPlaceholder('Partner or Reference Number').click();
  await page.getByPlaceholder('Partner or Reference Number').fill('test4');
  await page.getByPlaceholder('Main or Parent External').click();
  await page.getByPlaceholder('Main or Parent External').fill('test5');
  await page.locator('#editor-container').getByRole('paragraph').click();
  await page.locator('#editor-container div').first().fill('test6');
  await page.locator('#editor-container2 div').first().click();
  await page.locator('#editor-container2 div').first().fill('test7');
  await page.getByPlaceholder('Map Book Page').click();
  await page.getByPlaceholder('Map Book Page').fill('test8');
  await page.getByPlaceholder('Full Address of the call (').click();
  await page.getByPlaceholder('Full Address of the call (').fill('123 Main Street, Reno Nev');
  await page.getByPlaceholder('Full Address of the call (').press('CapsLock');
  await page.getByPlaceholder('Full Address of the call (').fill('123 Main Street, Reno NevD');
  await page.getByPlaceholder('Full Address of the call (').press('CapsLock');
  await page.getByPlaceholder('Full Address of the call (').fill('123 Main Street, Reno Nev');
  await page.getByPlaceholder('Full Address of the call (').press('CapsLock');
  await page.getByPlaceholder('Full Address of the call (').fill('123 Main Street, Reno NevDA');
  await page.getByPlaceholder('Full Address of the call (').press('CapsLock');
  await page.getByPlaceholder('Full Address of the call (').fill('123 Main Street, Reno Nevada');
  await page.getByRole('link', { name: 'Find Address' }).click();
  await expect(page.getByRole('button', { name: 'Marker' })).toBeVisible();
  await page.getByPlaceholder('Notes about closing the call').click();
  await page.getByPlaceholder('Notes about closing the call').fill('test9');
  await page.getByRole('button', { name: 'Add Archived Call' }).click();
  await expect(page.locator('tbody')).toContainText('Test Archive Call');
});

test('calls add new call', async ({ page }) => {
  await page.goto('https://qaweb.resgrid.dev/Account/LogOn');
  await page.getByPlaceholder('Username').click();
  await page.getByPlaceholder('Username').fill(process.env.PW_LOGIN_USERNAME);
  await page.getByPlaceholder('Password').click();
  await page.getByPlaceholder('Password').fill(process.env.PW_LOGIN_PASSWORD);
  await page.getByRole('button', { name: 'Log On' }).click();
  await page.goto('https://qaweb.resgrid.dev/User/Home/Dashboard');
  await page.getByRole('link', { name: ' Calls' }).click();
  await expect(page.locator('#unitsStatusesList')).toContainText('Engine 1');
  await page.locator('#page-wrapper div').filter({ hasText: 'Calls Home Calls Archived' }).locator('#addPersonButton').click();
  await page.getByPlaceholder('Name of the Call').click();
  await page.getByPlaceholder('Name of the Call').fill('test new call');
  await page.locator('#CallPriority').selectOption('2');
  await page.locator('#newCallForm div').filter({ hasText: 'Type No Type MEDICAL' }).locator('div').click();
  await page.locator('#Call_Type').selectOption('STRUCTURE FIRE');
  await page.getByPlaceholder('Name of the Person Reporting').click();
  await page.getByPlaceholder('Name of the Person Reporting').fill('test1');
  await page.getByPlaceholder('Phone or Email address of the').click();
  await page.getByPlaceholder('Phone or Email address of the').fill('test2');
  await page.getByPlaceholder('CAD Id or Inbound Call System').click();
  await page.getByPlaceholder('CAD Id or Inbound Call System').fill('test3');
  await page.getByPlaceholder('Main or Parent External').click();
  await page.getByPlaceholder('Main or Parent External').fill('test4');
  await page.getByPlaceholder('Partner or Reference Number').click();
  await page.getByPlaceholder('Partner or Reference Number').fill('test5');
  await page.locator('#nature-container').getByRole('paragraph').click();
  await page.locator('#nature-container div').first().fill('test6');
  await page.locator('#note-container div').first().click();
  await page.locator('#note-container div').first().fill('test7');
  await page.getByPlaceholder('Map Book Page').click();
  await page.getByPlaceholder('Map Book Page').fill('test8');
  await page.getByPlaceholder('Full Address of the call (').click();
  await page.getByPlaceholder('Full Address of the call (').fill('123 main street reno nv');
  await page.getByRole('link', { name: 'Find Address' }).click();
  await expect(page.getByRole('button', { name: 'Marker' })).toBeVisible();
  await page.locator('input[name="dispatchUser_B5241B84-8BDC-4EA2-B35B-87E47138A950"]').check();
  await page.getByRole('button', { name: 'Create and Dispatch Call' }).click();
  await expect(page.locator('#activeCallsList')).toContainText('test new call');
});

test('calls view call', async ({ page }) => {
  await page.goto('https://qaweb.resgrid.dev/Account/LogOn');
  await page.getByPlaceholder('Username').click();
  await page.getByPlaceholder('Username').fill(process.env.PW_LOGIN_USERNAME);
  await page.getByPlaceholder('Password').click();
  await page.getByPlaceholder('Password').fill(process.env.PW_LOGIN_PASSWORD);
  await page.getByRole('button', { name: 'Log On' }).click();
  await page.getByRole('link', { name: ' Calls' }).click();
  await page.getByRole('row', { name: '24-24 test new call 12/31/' }).getByRole('link').first().click();
  await expect(page.locator('#page-wrapper')).toContainText('test new call');
  await page.getByPlaceholder('Enter note here...').click();
  await page.getByPlaceholder('Enter note here...').fill('test');
  await page.getByRole('button', { name: 'Add Note' }).click();
  await expect(page.locator('#note-messages-inner')).toContainText('test');
  await expect(page.locator('#cluster_info')).toContainText('test4');
  await expect(page.locator('#cluster_info')).toContainText('Shawn Jackson');
  await page.getByRole('link', { name: 'Dispatched' }).click();
  await expect(page.getByRole('table')).toContainText('Test User69');
});

test('calls update call', async ({ page }) => {
  await page.goto('https://qaweb.resgrid.dev/Account/LogOn');
  await page.getByPlaceholder('Username').click();
  await page.getByPlaceholder('Username').fill(process.env.PW_LOGIN_USERNAME);
  await page.getByPlaceholder('Password').click();
  await page.getByPlaceholder('Password').fill(process.env.PW_LOGIN_PASSWORD);
  await page.getByRole('button', { name: 'Log On' }).click();
  await page.goto('https://qaweb.resgrid.dev/User/Home/Dashboard');
  await page.getByRole('link', { name: ' Calls' }).click();
  await page.getByRole('row', { name: '24-24 test new call 12/31/' }).getByRole('link').nth(1).click();
  await page.getByPlaceholder('Name of the Call').click();
  await page.getByPlaceholder('Name of the Call').fill('test new call updated');
  await page.locator('#CallPriority').selectOption('1');
  await page.locator('#Call_Type').selectOption('MEDICAL');
  await page.getByPlaceholder('Name of the Person Reporting').click();
  await page.getByPlaceholder('Name of the Person Reporting').fill('test1a');
  await page.getByPlaceholder('Phone or Email address of the').click();
  await page.getByPlaceholder('Phone or Email address of the').fill('test2a');
  await page.getByPlaceholder('CAD Id or Inbound Call System').click();
  await page.getByPlaceholder('CAD Id or Inbound Call System').fill('test3a');
  await page.getByPlaceholder('Main or Parent External').click();
  await page.getByPlaceholder('Main or Parent External').fill('test4a');
  await page.getByPlaceholder('Partner or Reference Number').click();
  await page.getByPlaceholder('Partner or Reference Number').fill('test5a');
  await page.getByText('test6').click();
  await page.locator('#nature-container div').filter({ hasText: 'test6' }).fill('test6a');
  await page.getByText('test7').click();
  await page.locator('#note-container div').filter({ hasText: 'test7' }).fill('test7a');
  await page.getByPlaceholder('Map Book Page').click();
  await page.getByPlaceholder('Map Book Page').fill('test8a');
  await page.getByRole('button', { name: 'Update' }).click();
  await expect(page.locator('#activeCallsList')).toContainText('test new call updated');
});